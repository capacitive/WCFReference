//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFReferenceServiceClient.WCFRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCFReferenceService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PLCDataPacket", Namespace="http://schemas.datacontract.org/2004/07/WCFReferenceService")]
    [System.SerializableAttribute()]
    public partial class PLCDataPacket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFReferenceServiceClient.WCFRef.DataByte[] BytesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFReferenceServiceClient.WCFRef.DataByte[] Bytes {
            get {
                return this.BytesField;
            }
            set {
                if ((object.ReferenceEquals(this.BytesField, value) != true)) {
                    this.BytesField = value;
                    this.RaisePropertyChanged("Bytes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataByte", Namespace="http://schemas.datacontract.org/2004/07/WCFReferenceService")]
    [System.SerializableAttribute()]
    public partial class DataByte : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFReferenceServiceClient.WCFRef.DataBit[] BitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ByteIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHeaderOrFooterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFReferenceServiceClient.WCFRef.DataBit[] Bits {
            get {
                return this.BitsField;
            }
            set {
                if ((object.ReferenceEquals(this.BitsField, value) != true)) {
                    this.BitsField = value;
                    this.RaisePropertyChanged("Bits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ByteIndex {
            get {
                return this.ByteIndexField;
            }
            set {
                if ((this.ByteIndexField.Equals(value) != true)) {
                    this.ByteIndexField = value;
                    this.RaisePropertyChanged("ByteIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHeaderOrFooter {
            get {
                return this.IsHeaderOrFooterField;
            }
            set {
                if ((this.IsHeaderOrFooterField.Equals(value) != true)) {
                    this.IsHeaderOrFooterField = value;
                    this.RaisePropertyChanged("IsHeaderOrFooter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataBit", Namespace="http://schemas.datacontract.org/2004/07/WCFReferenceService")]
    [System.SerializableAttribute()]
    public partial class DataBit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AGVTagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AGVTags {
            get {
                return this.AGVTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.AGVTagsField, value) != true)) {
                    this.AGVTagsField = value;
                    this.RaisePropertyChanged("AGVTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitIndex {
            get {
                return this.BitIndexField;
            }
            set {
                if ((this.BitIndexField.Equals(value) != true)) {
                    this.BitIndexField = value;
                    this.RaisePropertyChanged("BitIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFRef.IServiceContract")]
    public interface IServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/GetData", ReplyAction="http://tempuri.org/IServiceContract/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/GetData", ReplyAction="http://tempuri.org/IServiceContract/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceContract/GetDataUsingDataContractResponse")]
        WCFReferenceServiceClient.WCFRef.CompositeType GetDataUsingDataContract(WCFReferenceServiceClient.WCFRef.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IServiceContract/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WCFReferenceServiceClient.WCFRef.CompositeType> GetDataUsingDataContractAsync(WCFReferenceServiceClient.WCFRef.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/StorePLCDataPacketDecoderConfiguration", ReplyAction="http://tempuri.org/IServiceContract/StorePLCDataPacketDecoderConfigurationRespons" +
            "e")]
        void StorePLCDataPacketDecoderConfiguration(WCFReferenceServiceClient.WCFRef.PLCDataPacket PLCPacket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/StorePLCDataPacketDecoderConfiguration", ReplyAction="http://tempuri.org/IServiceContract/StorePLCDataPacketDecoderConfigurationRespons" +
            "e")]
        System.Threading.Tasks.Task StorePLCDataPacketDecoderConfigurationAsync(WCFReferenceServiceClient.WCFRef.PLCDataPacket PLCPacket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/GetPLCDataPacketDecoderConfiguration", ReplyAction="http://tempuri.org/IServiceContract/GetPLCDataPacketDecoderConfigurationResponse")]
        WCFReferenceServiceClient.WCFRef.PLCDataPacket GetPLCDataPacketDecoderConfiguration(string PLCDataPacketDecoderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/GetPLCDataPacketDecoderConfiguration", ReplyAction="http://tempuri.org/IServiceContract/GetPLCDataPacketDecoderConfigurationResponse")]
        System.Threading.Tasks.Task<WCFReferenceServiceClient.WCFRef.PLCDataPacket> GetPLCDataPacketDecoderConfigurationAsync(string PLCDataPacketDecoderName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceContractChannel : WCFReferenceServiceClient.WCFRef.IServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceContractClient : System.ServiceModel.ClientBase<WCFReferenceServiceClient.WCFRef.IServiceContract>, WCFReferenceServiceClient.WCFRef.IServiceContract {
        
        public ServiceContractClient() {
        }
        
        public ServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFReferenceServiceClient.WCFRef.CompositeType GetDataUsingDataContract(WCFReferenceServiceClient.WCFRef.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WCFReferenceServiceClient.WCFRef.CompositeType> GetDataUsingDataContractAsync(WCFReferenceServiceClient.WCFRef.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void StorePLCDataPacketDecoderConfiguration(WCFReferenceServiceClient.WCFRef.PLCDataPacket PLCPacket) {
            base.Channel.StorePLCDataPacketDecoderConfiguration(PLCPacket);
        }
        
        public System.Threading.Tasks.Task StorePLCDataPacketDecoderConfigurationAsync(WCFReferenceServiceClient.WCFRef.PLCDataPacket PLCPacket) {
            return base.Channel.StorePLCDataPacketDecoderConfigurationAsync(PLCPacket);
        }
        
        public WCFReferenceServiceClient.WCFRef.PLCDataPacket GetPLCDataPacketDecoderConfiguration(string PLCDataPacketDecoderName) {
            return base.Channel.GetPLCDataPacketDecoderConfiguration(PLCDataPacketDecoderName);
        }
        
        public System.Threading.Tasks.Task<WCFReferenceServiceClient.WCFRef.PLCDataPacket> GetPLCDataPacketDecoderConfigurationAsync(string PLCDataPacketDecoderName) {
            return base.Channel.GetPLCDataPacketDecoderConfigurationAsync(PLCDataPacketDecoderName);
        }
    }
}
